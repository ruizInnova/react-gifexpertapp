{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,uBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,IACdO,QAAQC,IAAI,wBAKhB,UACI,6BAAKT,IACL,uBACIU,KAAK,OACLC,MAAQX,EACRY,SArBc,SAACT,GACvBK,QAAQC,IAAKN,EAAEU,OAAOF,OACtBV,EAAeE,EAAEU,OAAOF,c,+BCTnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAGTC,EAHS,iDAGwCC,UAAUH,GAHlD,+DAIII,MAAOF,GAJX,cAITG,EAJS,gBAKQA,EAAKC,OALb,uBAKPC,EALO,EAKPA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZ3B,kBAgBTM,GAhBS,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,6BAAMA,QCHLO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECFwB,SAACA,GAC1B,MAA0BhB,mBAAS,CAC/BuB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAZEC,qBAAW,WACRxB,EAASC,GAERwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAQ,SAIjB,CAACpB,IAEEqB,EDjB2BK,CAAa1B,GAAjCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,6BAAMpB,IACJoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAkB,GAAK,OACb,cAAC,EAAD,eAESA,GADEA,EAAMhB,aEZ5BiB,EAAe,WAGxB,MAAoC5C,mBAAS,CAAC,SAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAUA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ8C,EAAWpB,KAAK,SAAAT,GAAQ,OAEnB,aADD,CACG,EAAF,CAEGA,SAAYA,GADNA,Y,MCrBlC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.16f671ed.chunk.js","sourcesContent":["import React, { useState } from 'react'\n//validation\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories}) => {\n    const [inputValue, setinputValue] = useState('');\n\n    const handleInputChange = (e) => { \n        console.log( e.target.value); \n        setinputValue( e.target.value );\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2) {\n\n            setCategories(cats => [inputValue, ...cats ] );\n            setinputValue('');\n            console.log('submit realizado..');\n        }\n    };\n\n    return (\n        <form onSubmit={ handleSubmit }>\n            <h4>{inputValue}</h4>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\n//Add propTypes required \n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async ( category ) => { \n\n\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=WFV5XRjhcdG4pancIU6TACPbUKUS9eA5`;\n        const resp = await fetch( url );\n        const { data } = await resp.json();\n\n        //mutamos la data\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        });\n\n       return gifs;\n\n}\n","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n    // console.log({id, title, url});\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            <h4>{ title }</h4>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n    \n    const { data:images, loading } = useFetchGifs(category);  \n   \n    return (\n        <>\n            <h3>{ category }</h3>\n            { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\n            <div className=\"card-grid\">\n                {\n                    images.map( image => (\n                        <GifGridItem \n                            key = {image.id}    \n                            { ...image } />\n                    ))\n                }\n\n            </div>\n        </>\n    );\n}\n","import {useState, useEffect} from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\n\nexport const useFetchGifs = (category) => {\n   const [state, setstate] = useState({\n       data: [],\n       loading: true,\n   });\n\n     // el useEffect funciona para no realizar multiples peticiones a la api REST\n     useEffect( () => {\n        getGifs( category )\n        //.then(setImages); // forma corta\n        .then( imgs => { \n            setstate({\n                data: imgs,\n                loading:false\n            })\n        }) //esta sería la forma larga\n\n    }, [category]);\n\n   return state;\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    //Aqui escribimos nuestro Código\n    //const categories = ['Pokemon', 'Samurai X', 'Record of Ragnarok']; de esta forma no es correcta\n    const [categories, setCategories] = useState(['Goku']);\n/*\n    //Add new element categories\n    const handleAdd = () => {\n        setcategories([...categories,'Hunter X Hunter'] );\n        console.log(categories);\n    }\n\n*/\n    // respuesta\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={ setCategories } />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => (\n                        //return <li key={ category }> { category } </li>\n                         < GifGrid \n                            key={ category }\n                            category= { category }\n                        />\n                    ))\n                }\n            </ol>\n           \n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}